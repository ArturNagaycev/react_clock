{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","tick","setState","this","window","setInterval","prevProps","prevState","name","props","prevName","prevDate","console","debug","info","toUTCString","slice","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","removeClock","event","preventDefault","addClock","setNewClockName","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,EAgCEC,KAAO,WACL,EAAKC,SAAS,CACZJ,KAAM,IAAIC,QAlChB,uDAOE,WACEI,KAAKH,QAAUI,OAAOC,YAAYF,KAAKF,KAAM,OARjD,gCAWE,SAAmBK,EAAkBC,GACnC,IAAQC,EAASL,KAAKM,MAAdD,KACME,EAAaJ,EAAnBE,KACAV,EAASK,KAAKN,MAAdC,KACMa,EAAaJ,EAAnBT,KAEJU,IAASE,GAEXE,QAAQC,MAAR,uBAA8BH,EAA9B,eAA6CF,IAG3CV,IAASa,GAEXC,QAAQE,KAAKhB,EAAKiB,cAAcC,OAAO,IAAK,MAxBlD,kCA4BE,WACEZ,OAAOa,cAAcd,KAAKH,WA7B9B,oBAsCE,WACE,IAAQF,EAASK,KAAKN,MAAdC,KACAU,EAASL,KAAKM,MAAdD,KAER,OACE,sBAAKU,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,IAGF,YAED,sBAAMU,UAAU,cAAhB,SACGpB,EAAKiB,cAAcC,OAAO,IAAK,YAnD1C,GAA2BG,aCN3B,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBK,GAQX,IAAMG,EAAb,4MACE3B,MAAQ,CACN4B,UAAU,EACVC,UAAW,WAHf,EAME1B,QAAU,EANZ,EAqBE2B,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAK3B,SAAS,CAAEuB,UAAU,KAvB9B,EA0BEK,SAAW,WACT,EAAK5B,SAAS,CAAEuB,UAAU,KA3B9B,EA8BEM,gBAAkB,WAChB,EAAK7B,SAAS,CAAEwB,UAAWN,OA/B/B,uDAQE,WACEY,SAASC,iBAAiB,cAAe9B,KAAKwB,aAC9CK,SAASC,iBAAiB,QAAS9B,KAAK2B,UAExC3B,KAAKH,QAAUI,OAAOC,YAAYF,KAAK4B,gBAAiB,QAZ5D,kCAeE,WACEC,SAASE,oBAAoB,cAAe/B,KAAKwB,aACjDK,SAASE,oBAAoB,QAAS/B,KAAK2B,UAC3C1B,OAAOa,cAAcd,KAAKH,WAlB9B,oBAkCE,WACE,MAAgCG,KAAKN,MAA7B4B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECO,GACI,cAAC,EAAD,CAAOjB,KAAMkB,WA1C1B,GAAyBP,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.04d7e2b9.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.tick, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { name } = this.props;\n    const { name: prevName } = prevProps;\n    const { date } = this.state;\n    const { date: prevDate } = prevState;\n\n    if (name !== prevName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${name}`);\n    }\n\n    if (date !== prevDate) {\n      // eslint-disable-next-line no-console\n      console.info(date.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  tick = () => {\n    this.setState({\n      date: new Date(),\n    });\n  };\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.removeClock);\n    document.addEventListener('click', this.addClock);\n\n    this.timerId = window.setInterval(this.setNewClockName, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.removeClock);\n    document.removeEventListener('click', this.addClock);\n    window.clearInterval(this.timerId);\n  }\n\n  removeClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  addClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  setNewClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n          && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}