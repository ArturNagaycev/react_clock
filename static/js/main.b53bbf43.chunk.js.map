{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","tick","setState","this","window","setInterval","_","prevState","console","info","toUTCString","slice","clearInterval","clockName","props","className","Component","getRandomName","value","now","toString","App","hasClock","removeClock","event","preventDefault","addClock","setNewClockName","document","addEventListener","prevClockName","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,EAyBEC,KAAO,WACL,EAAKC,SAAS,CACZJ,KAAM,IAAIC,QA3BhB,uDAOE,WACEI,KAAKH,QAAUI,OAAOC,YAAYF,KAAKF,KAAM,OARjD,gCAWE,SAAmBK,EAAUC,GAC3B,IAAQT,EAASK,KAAKN,MAAdC,KAGJA,IAFuBS,EAAnBT,MAINU,QAAQC,KAAKX,EAAKY,cAAcC,OAAO,IAAK,MAjBlD,kCAqBE,WACEP,OAAOQ,cAAcT,KAAKH,WAtB9B,oBA+BE,WACE,IAAQF,EAASK,KAAKN,MAAdC,KACAe,EAAcV,KAAKW,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGjB,EAAKY,cAAcC,OAAO,IAAK,YA5C1C,GAA2BK,aCP3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVT,UAAW,WAHf,EAMEb,QAAU,EANZ,EA+BEuB,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAKvB,SAAS,CAAEoB,UAAU,KAjC9B,EAoCEI,SAAW,WACT,EAAKxB,SAAS,CAAEoB,UAAU,KArC9B,EAwCEK,gBAAkB,WAChB,EAAKzB,SAAS,CAAEW,UAAWI,OAzC/B,uDAQE,WACEW,SAASC,iBAAiB,cAAe1B,KAAKoB,aAC9CK,SAASC,iBAAiB,QAAS1B,KAAKuB,UAExCvB,KAAKH,QAAUI,OAAOC,YAAYF,KAAKwB,gBAAiB,QAZ5D,gCAeE,SAAmBrB,EAAUC,GAC3B,MAAgCJ,KAAKN,MAA7BgB,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,SACAQ,EAAkBvB,EAA7BM,UAEJA,IAAciB,GAAiBR,GAEjCd,QAAQuB,MAAR,uBAA8BD,EAA9B,eAAkDjB,MArBxD,kCAyBE,WACEe,SAASI,oBAAoB,cAAe7B,KAAKoB,aACjDK,SAASI,oBAAoB,QAAS7B,KAAKuB,UAC3CtB,OAAOQ,cAAcT,KAAKH,WA5B9B,oBA4CE,WACE,MAAgCG,KAAKN,MAA7ByB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CAECO,GACI,cAAC,EAAD,CAAOT,UAAWA,EAAWS,SAAUA,WApDpD,GAAyBN,aCZzBiB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.b53bbf43.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  hasClock: boolean,\n  clockName: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.tick, 1000);\n  }\n\n  componentDidUpdate(_: never, prevState: State) {\n    const { date } = this.state;\n    const { date: prevDate } = prevState;\n\n    if (date !== prevDate) {\n      // eslint-disable-next-line no-console\n      console.info(date.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  tick = () => {\n    this.setState({\n      date: new Date(),\n    });\n  };\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.removeClock);\n    document.addEventListener('click', this.addClock);\n\n    this.timerId = window.setInterval(this.setNewClockName, 3300);\n  }\n\n  componentDidUpdate(_: never, prevState: State) {\n    const { clockName, hasClock } = this.state;\n    const { clockName: prevClockName } = prevState;\n\n    if (clockName !== prevClockName && hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.removeClock);\n    document.removeEventListener('click', this.addClock);\n    window.clearInterval(this.timerId);\n  }\n\n  removeClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  addClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  setNewClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n          && <Clock clockName={clockName} hasClock={hasClock} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}